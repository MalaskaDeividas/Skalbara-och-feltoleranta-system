name: CI/CD Pipeline

on:
  push:
    branches:
      - "**"

env:
  REGISTRY_USERNAME: ${{ secrets.DEIVIDOCKER_USERNAME }} # Docker Hub Username
  DEPLOYMENT_NAME: hotel404-service
  K8S_SERVER: ${{ secrets.K8S_SERVER }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DEIVIDOCKER_PASSWORD }}" | docker login -u ${{ env.REGISTRY_USERNAME }} --password-stdin

      - name: Build and push backend
        run: |
          docker build -t ${{ env.REGISTRY_USERNAME }}/hotel404-backend:${{ github.sha }} -f hotel404/backend/Dockerfile hotel404/backend/
          docker push ${{ env.REGISTRY_USERNAME }}/hotel404-backend:${{ github.sha }}

      - name: Build and push frontend
        run: |
          docker build -t ${{ env.REGISTRY_USERNAME }}/hotel404-frontend:${{ github.sha }} -f hotel404/frontend/Dockerfile hotel404/frontend/
          docker push ${{ env.REGISTRY_USERNAME }}/hotel404-frontend:${{ github.sha }}

      # Set up kubectl using proven action
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.24.2"

      # Configure kubeconfig from secret
      - name: Configure Kubernetes context
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          kubectl config use-context hotel404AKSCluster

      # First apply deployment manifests to create resources
      - name: Apply Kubernetes manifests
        run: kubectl apply -f ./k8s/ # Path to our manifests in k8s folder

      # Update container images
      # - name: Update deployments
      #   run: |
      #     kubectl set image deployment/hotel404-backend hotel404-backend=${{ env.REGISTRY_USERNAME }}/hotel404-backend:${{ github.sha }}
      #     kubectl set image deployment/hotel404-frontend hotel404-frontend=${{ env.REGISTRY_USERNAME }}/hotel404-frontend:${{ github.sha }}
      #     kubectl set image deployment/hotel404-microservice hotel404-microservice=${{ env.REGISTRY_USERNAME }}/hotel404-microservice:${{ github.sha }}

      # Single deployment step
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f ./k8s/
          kubectl set image deployment/hotel404-backend hotel404-backend=${{ env.REGISTRY_USERNAME }}/hotel404-backend:${{ github.sha }}
          kubectl set image deployment/hotel404-frontend hotel404-frontend=${{ env.REGISTRY_USERNAME }}/hotel404-frontend:${{ github.sha }}
          kubectl set image deployment/hotel404-microservice hotel404-microservice=${{ env.REGISTRY_USERNAME }}/hotel404-microservice:${{ github.sha }}

      # - name: Set up Kubernetes
      #   uses: tale/kubectl-action@v1
      #   with:
      #     base64-kube-config: ${{ secrets.KUBE_CONFIG }}
      #     kubectl-version: v1.24.2

      # - name: Deploy to AKS
      #   run: |
      #     kubectl apply -f .github/workflows/deployment.yaml
      #     kubectl set image deployment/hotel404-microservice hotel404-microservice=${{ secrets.DEIVIDOCKER_USERNAME }}/hotel404-microservice:${{ github.sha }}
