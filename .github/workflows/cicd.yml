name: CI/CD Pipeline

on:
  push:
    branches:
      - "**"


permissions:
  id-token: write
  contents: read


env:
  REGISTRY_USERNAME: ${{ secrets.DEIVIDOCKER_USERNAME }} # Docker Hub Username
  DEPLOYMENT_NAME: hotel404-service
  RESOURCE_GROUP: "hotel404ResourceGroup"
  CLUSTER_NAME: "hotel404AKSCluster"
  SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }} # This should be Managed Identity Client ID

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login to Azure using Managed Identity
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.CLIENT_ID }}
          tenant-id: ${{ env.TENANT_ID }}
          subscription-id: ${{ env.SUBSCRIPTION_ID }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DEIVIDOCKER_PASSWORD }}" | docker login -u ${{ env.REGISTRY_USERNAME }} --password-stdin

      - name: Build and push backend
        run: |
          docker build -t ${{ env.REGISTRY_USERNAME }}/hotel404-backend:${{ github.sha }} -f hotel404/backend/Dockerfile hotel404/backend/
          docker push ${{ env.REGISTRY_USERNAME }}/hotel404-backend:${{ github.sha }}

      - name: Build and push frontend
        run: |
          docker build -t ${{ env.REGISTRY_USERNAME }}/hotel404-frontend:${{ github.sha }} -f hotel404/frontend/Dockerfile hotel404/frontend/
          docker push ${{ env.REGISTRY_USERNAME }}/hotel404-frontend:${{ github.sha }}

      # Set up kubectl using Azure AKS
      - name: Set up Kubernetes Context for AKS
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      # Apply Kubernetes manifests
      - name: Apply Kubernetes manifests
        run: kubectl apply -f ./github/workflows/k8s/

      # Update container images
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/hotel404-backend hotel404-backend=${{ env.REGISTRY_USERNAME }}/hotel404-backend:${{ github.sha }}
          kubectl set image deployment/hotel404-frontend hotel404-frontend=${{ env.REGISTRY_USERNAME }}/hotel404-frontend:${{ github.sha }}
          kubectl set image deployment/hotel404-microservice hotel404-microservice=${{ env.REGISTRY_USERNAME }}/hotel404-microservice:${{ github.sha }}
